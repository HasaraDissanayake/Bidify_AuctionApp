////  WishlistView.swift//  Bidify_AuctionApp////  Created by Hasara Dissanayake on 5/4/25.//import SwiftUIstruct WishlistView: View {    @State private var wishlistItems: [Bid_Item] = [        Bid_Item(            id: UUID(),            itemName: "Apple Watch",            description: "Series 9, GPS + Cellular.",            category: "Electronics",            condition: "Brand New",            image: nil,            sellerName: "John",            email: "john@example.com",            contact: "123456789",            location: "New York",            createdDate: Date().addingTimeInterval(-3600 * 24)        ),        Bid_Item(            id: UUID(),            itemName: "AirPods Pro",            description: "Noise cancellation and wireless charging.",            category: "Electronics",            condition: "Used - Like New",            image: nil,            sellerName: "Jane",            email: "jane@example.com",            contact: "987654321",            location: "San Francisco",            createdDate: Date().addingTimeInterval(-3600 * 48)        )    ]    let dateFormatter: DateFormatter = {        let df = DateFormatter()        df.dateStyle = .medium        df.timeStyle = .short        return df    }()    var body: some View {        VStack(spacing: 0) {            // Header            HStack {                Text("Wish List")                    .font(.title2)                    .fontWeight(.bold)                    .foregroundColor(.accentColor)                Spacer()            }            .padding()            .background(Color.white)            .shadow(color: Color.gray.opacity(0.2), radius: 4, x: 0, y: 2)            // Wishlist content            ScrollView {                VStack(spacing: 16) {                    ForEach(wishlistItems) { item in                        WishlistItemCard(item: item, dateFormatter: dateFormatter) {                            if let index = wishlistItems.firstIndex(where: { $0.id == item.id }) {                                wishlistItems.remove(at: index)                            }                        }                    }                }                .padding()            }            Spacer()            Divider()            // Footer            HStack {                footerButton("house.fill", "Home")                Spacer()                footerButton("chart.bar.fill", "Dashboard")                Spacer()                footerButton("heart.fill", "Wishlist")                Spacer()                footerButton("checkmark.circle.fill", "Completed")                Spacer()                footerButton("gearshape.fill", "Settings")            }            .padding()            .foregroundColor(.teal)        }        //.background(Color.backgroundColor.ignoresSafeArea())        .navigationBarHidden(true)    }    private func footerButton(_ systemImage: String, _ label: String) -> some View {        Button(action: {}) {            VStack {                Image(systemName: systemImage)                Text(label).font(.footnote)            }        }    }}struct WishlistItemCard: View {    let item: Bid_Item    let dateFormatter: DateFormatter    let removeAction: () -> Void    var body: some View {        VStack(alignment: .leading, spacing: 12) {            HStack {                if let uiImage = item.image {                    Image(uiImage: uiImage)                        .resizable()                        .scaledToFit()                        .frame(width: 60, height: 60)                        .cornerRadius(8)                } else {                    Image(systemName: "photo")                        .resizable()                        .scaledToFit()                        .frame(width: 60, height: 60)                        .foregroundColor(.gray)                }                VStack(alignment: .leading, spacing: 4) {                    Text(item.itemName)                        .font(.headline)                        .foregroundColor(.accentColor)                    Text("Condition: \(item.condition)")                        .font(.subheadline)                        .foregroundColor(.secondary)                    Text("Added: \(dateFormatter.string(from: item.createdDate))")                        .font(.footnote)                        .foregroundColor(.gray)                }                Spacer()            }            HStack(spacing: 12) {                Button(action: removeAction) {                    Text("Remove")                        .fontWeight(.semibold)                        .padding(.horizontal, 27)                        .padding(.vertical, 10)                        .background(Color.red)                        .foregroundColor(.white)                        .cornerRadius(10)                }                Button(action: {                    // Add bidding logic here                }) {                    Text("Place a Bid")                        .fontWeight(.semibold)                        .padding(.horizontal, 27)                        .padding(.vertical, 10)                        .background(Color.teal)                        .foregroundColor(.white)                        .cornerRadius(10)                }            }        }        .padding()        .background(Color.white)        .cornerRadius(12)        .shadow(color: Color.gray.opacity(0.15), radius: 5, x: 0, y: 3)    }}struct WishlistView_Previews: PreviewProvider {    static var previews: some View {        WishlistView()    }}