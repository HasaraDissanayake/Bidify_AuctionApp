import SwiftUIstruct WishlistView: View {    @State private var wishlistItems: [BidItem] = [        BidItem(            id: 3,            name: "Apple Watch",            quantity: 1,            highestBid: 450,            imageName: "applewatch",            description: "Series 9, GPS + Cellular.",            condition: "Brand New",            addedDate: Date().addingTimeInterval(-3600 * 24),            lastBidTime: Date().addingTimeInterval(-3600)        ),        BidItem(            id: 4,            name: "AirPods Pro",            quantity: 1,            highestBid: 250,            imageName: "airpodspro",            description: "Noise cancellation and wireless charging.",            condition: "Used - Like New",            addedDate: Date().addingTimeInterval(-3600 * 48),            lastBidTime: Date().addingTimeInterval(-1800)        )    ]    let dateFormatter: DateFormatter = {        let df = DateFormatter()        df.dateStyle = .medium        df.timeStyle = .short        return df    }()    var body: some View {        VStack(spacing: 0) {            // App Bar            HStack {                Text("Wish List")                    .font(.title2)                    .fontWeight(.bold)                    .foregroundColor(.accentColor)                Spacer()            }            .padding()            .background(Color.white)            .shadow(color: Color.gray.opacity(0.2), radius: 4, x: 0, y: 2)            // Wishlist Items            ScrollView {                VStack(spacing: 16) {                    ForEach(wishlistItems) { item in                        VStack(alignment: .leading, spacing: 12) {                            HStack {                                Image(systemName: item.imageName)                                    .resizable()                                    .scaledToFit()                                    .frame(width: 60, height: 60)                                    .padding(.trailing, 8)                                    .foregroundColor(.primaryColor)                                VStack(alignment: .leading, spacing: 4) {                                    Text(item.name)                                        .font(.headline)                                        .foregroundColor(.accentColor)                                    Text("Category: \(item.condition)")                                        .font(.subheadline)                                        .foregroundColor(.secondary)                                    Text("Added: \(dateFormatter.string(from: item.addedDate))")                                        .font(.footnote)                                        .foregroundColor(.gray)                                }                                Spacer()                            }                            HStack(spacing: 12) {                                Button(action: {                                    if let index = wishlistItems.firstIndex(where: { $0.id == item.id }) {                                        wishlistItems.remove(at: index)                                    }                                }) {                                    Text("Remove")                                        .fontWeight(.semibold)                                        .frame(maxWidth: .infinity)                                        .padding(.vertical, 0.1)     .padding()                                        .background(Color.red)                                        .foregroundColor(.white)                                        .cornerRadius(10)                                }                                Button(action: {                                    // Place bid logic                                }) {                                    Text("Place a Bid")                                        .fontWeight(.semibold)                                        .frame(maxWidth: .infinity)                                        .padding(.vertical, 0.1)       .padding()                                        .background(Color.primaryColor)                                        .foregroundColor(.white)                                        .cornerRadius(10)                                }                            }                        }                        .padding()                        .background(Color.white)                        .cornerRadius(12)                        .shadow(color: Color.gray.opacity(0.15), radius: 5, x: 0, y: 3)                    }                }                .padding()            }            Spacer()        }        .background(Color.backgroundColor.ignoresSafeArea())        .navigationBarHidden(true)    }}struct WishlistView_Previews: PreviewProvider {    static var previews: some View {        WishlistView()    }}